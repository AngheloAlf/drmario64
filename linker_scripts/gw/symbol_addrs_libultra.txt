osEepromProbe = 0x800025E0; // size:0x74 (conteepprobe, true)
osEepromLongWrite = 0x80002660; // size:0xE4 (conteeplongwrite, true)
osEepromLongRead = 0x80002750; // size:0x70 (conteeplongread, true)
osCreatePiManager = 0x800027C0; // size:0x190 (pimgr, true)
__osEPiRawStartDma = 0x80002950; // size:0x1EC (epirawdma, true)
osEPiStartDma = 0x80002BA0; // size:0x94 (epidma, true)
osEPiLinkHandle = 0x80002C40; // size:0x44 (epilinkhandle, true)
osCartRomInit = 0x80002C90; // size:0x178 (cartrominit, true)
__osDevMgrMain = 0x80002E10; // size:0x3B8 (devmgr, true)
__osPiCreateAccessQueue = 0x800031D0; // (pimgr, false)
__osPiGetAccess = 0x80003224; // (cartrominit, false)
__osPiRelAccess = 0x80003290; // (cartrominit, false)
osAiGetLength = 0x800032C0; // size:0x10 (aigetlen, true)
osAiGetStatus = 0x800032D0; // size:0x10 (aigetstat, true)
osAiSetFrequency = 0x800032E0; // size:0x118 (aisetfreq, true)
// alSynFreeFX = 0x800033F0; // size:0x8 (synfreefx, true)
osAiSetNextBuffer = 0x80003400; // size:0x94 (aisetnextbuf, true)
alEnvmixerPull = 0x800034A0; // size:0x500 (env, true)
// = 0x800038FF; // (env, false)
alEnvmixerParam = 0x800039A0; // size:0xD4 (env, true)
_pullSubFrame = 0x80003A74; // size:0x2D4 (env, true)
// = 0x80003BE1; // (env, false)
_frexpf = 0x80003D48; // size:0xE0 (env, true)
// = 0x80003DC1; // (env, false)
_ldexpf = 0x80003E28; // size:0x24 (env, true)
_getRate = 0x80003E4C; // size:0x280 (env, true)
_getVol = 0x800040CC; // size:0x84 (env, true)
alInit = 0x80004150; // size:0x2C (sl, true)
alClose = 0x8000417C; // size:0x30 (sl, true)
alLink = 0x800041AC; // size:0x20 (sl, true)
alUnlink = 0x800041CC; // size:0x30 (sl, true)
alHeapInit = 0x80004200; // size:0x34 (heapinit, true)
alSynNew = 0x80004240; // size:0x2CC (synthesizer, true)
alAudioFrame = 0x8000450C; // size:0x1B0 (synthesizer, true)
// = 0x800045D0; // (synthesizer, false)
// = 0x8000463F; // (synthesizer, false)
// = 0x800046AE; // (synthesizer, false)
__allocParam = 0x800046BC; // size:0x2C (synthesizer, true)
__freeParam = 0x800046E8; // size:0x18 (synthesizer, true)
_collectPVoices = 0x80004700; // size:0x54 (synthesizer, true)
_freePVoice = 0x80004754; // size:0x40 (synthesizer, true)
_timeToSamplesNoRound = 0x80004794; // size:0x48 (synthesizer, true)
_timeToSamples = 0x800047DC; // size:0x4C (synthesizer, true)
__nextSampleTime = 0x80004828; // size:0x54 (synthesizer, true)
alSynDelete = 0x80004880; // size:0x8 (syndelete, true)
alSynAddPlayer = 0x80004890; // size:0x50 (synaddplayer, true)
alSynAllocVoice = 0x800048E0; // size:0x128 (synallocvoice, true)
// = 0x800049BE; // (synallocvoice, false)
_allocatePVoice = 0x80004A08; // size:0xB8 (synallocvoice, true)
alSynStopVoice = 0x80004AC0; // size:0x7C (synstopvoice, true)
alSynStartVoice = 0x80004B40; // size:0x94 (synstartvoice, true)
alSynSetPitch = 0x80004BE0; // size:0x90 (synsetpitch, true)
alSynSetVol = 0x80004C70; // size:0xB8 (synsetvol, true)
alSynSetFXMix = 0x80004D30; // size:0xA0 (synsetfxmix, true)
alSynSetPan = 0x80004DD0; // size:0x90 (synsetpan, true)
alSynAllocFX = 0x80004E60; // size:0x94 (synallocfx, true)
osInvalDCache = 0x80004F00; // (sirawdma, false)
osWritebackDCacheAll = 0x80004FB0; // (sched, false)
// alSynFreeFX = 0x80004FD0; // size:0x8 (synfreefx, true)
osContStartQuery = 0x80004FE0; // size:0x80 (contquery, true)
osContGetQuery = 0x80005060; // size:0x20 (contquery, true)
osContStartReadData = 0x80005080; // size:0x88 (contreaddata, true)
osContGetReadData = 0x80005108; // size:0x9C (contreaddata, true)
// = 0x8000515B; // (contreaddata, false)
__osPackReadData = 0x800051A4; // size:0xB8 (contreaddata, true)
osContInit = 0x80005260; // size:0x19C (controller, true)
// = 0x80005395; // (controller, false)
__osContGetInitData = 0x800053FC; // size:0xB4 (controller, true)
// = 0x8000541C; // (controller, false)
__osPackRequestData = 0x800054B0; // size:0xBC (controller, true)
osContSetCh = 0x80005570; // size:0x60 (contsetch, true)
osVirtualToPhysical = 0x800055D0; // size:0x54 (virtualtophysical, true)
__cosf = 0x80005640; // size:0x150 (cosf, true)
cosf = 0x80005640; // (perspective, false)
guOrthoF = 0x80005790; // size:0x130 (ortho, true)
guOrtho = 0x800058C0; // size:0x14C (ortho, true)
guPerspectiveF = 0x80005A10; // size:0x1B0 (perspective, true)
guPerspective = 0x80005BC0; // size:0x1C8 (perspective, true)
guRotateRPYF = 0x80005D90; // size:0x188 (rotaterpy, true)
guRotateRPY = 0x80005F18; // size:0x18C (rotaterpy, true)
__sinf = 0x800060B0; // size:0x1A0 (sinf, true)
sinf = 0x800060B0; // (perspective, false)
sins = 0x80006250; // size:0x54 (sins, true)
bcopy = 0x800063C0; // (sptask, false)
bzero = 0x800066E0; // (cartrominit, false)
strchr = 0x80006780; // size:0x40 (string, true)
strlen = 0x800067C0; // size:0x24 (string, true)
memcpy = 0x800067E4; // size:0x28 (string, true)
osCreateMesgQueue = 0x80006810; // size:0x24 (createmesgqueue, true)
osJamMesg = 0x80006840; // size:0x134 (jammesg, true)
osRecvMesg = 0x80006980; // size:0x124 (recvmesg, true)
osSendMesg = 0x80006AB0; // size:0x130 (sendmesg, true)
osSetEventMesg = 0x80006BE0; // size:0xAC (seteventmesg, true)
osSpTaskLoad = 0x80006C90; // size:0x20C (sptask, true)
osSpTaskStartGo = 0x80006E9C; // size:0x2C (sptask, true)
osSpTaskYield = 0x80006ED0; // size:0x1C (sptaskyield, true)
osSpTaskYielded = 0x80006EF0; // size:0x4C (sptaskyielded, true)
osCreateScheduler = 0x80006F40; // size:0x148 (sched, true)
osScAddClient = 0x80007088; // size:0x58 (sched, true)
osScRemoveClient = 0x800070E0; // size:0x90 (sched, true)
osScGetCmdQ = 0x80007170; // size:0x8 (sched, true)
__scMain = 0x80007178; // size:0x104 (sched, true)
// = 0x800071AD; // (sched, false)
// = 0x8000726D; // (sched, false)
__scHandleRetrace = 0x8000727C; // size:0x100 (sched, true)
// = 0x80007321; // (sched, false)
__scHandleRSP = 0x8000737C; // size:0xF0 (sched, true)
// = 0x800073CC; // (sched, false)
// = 0x80007435; // (sched, false)
__scHandleRDP = 0x8000746C; // size:0x90 (sched, true)
// = 0x80007477; // (sched, false)
__scTaskReady = 0x800074FC; // size:0x54 (sched, true)
// = 0x80007513; // (sched, false)
// = 0x8000753D; // (sched, false)
__scTaskComplete = 0x80007550; // size:0x8C (sched, true)
__scAppendList = 0x800075DC; // size:0x58 (sched, true)
__scExec = 0x80007634; // size:0xD0 (sched, true)
__scYield = 0x80007704; // size:0x38 (sched, true)
__scSchedule = 0x8000773C; // size:0x214 (sched, true)
__osSiRawStartDma = 0x80007950; // size:0xA4 (sirawdma, true)
__osSiCreateAccessQueue = 0x80007A00; // (controller, false)
__osSiGetAccess = 0x80007A54; // (conteepprobe, false)
__osSiRelAccess = 0x80007AC0; // (conteepprobe, false)
osCreateThread = 0x80007AF0; // size:0xD0 (createthread, true)
osGetThreadPri = 0x80007BC0; // size:0x18 (getthreadpri, true)
osSetThreadPri = 0x80007BE0; // size:0xC8 (setthreadpri, true)
osStartThread = 0x80007CB0; // size:0x118 (startthread, true)
osStopThread = 0x80007DD0; // size:0xB4 (stopthread, true)
__osDequeueThread = 0x80007E90; // size:0x34 (thread, true)
// alSynFreeFX = 0x80007EBC; // size:0x8 (synfreefx, true)
osYieldThread = 0x80007ED0; // size:0x48 (yieldthread, true)
osGetTime = 0x80007F20; // size:0x84 (gettime, true)
osSetTime = 0x80007FB0; // size:0x14 (settime, true)
osSetTimer = 0x80007FD0; // size:0x12C (settimer, true)
__osTimerServicesInit = 0x80008100; // size:0x54 (timerintr, true)
__osTimerInterrupt = 0x80008154; // size:0x13C (timerintr, true)
// = 0x8000822C; // (timerintr, false)
// = 0x8000828C; // (timerintr, false)
__osSetTimerIntr = 0x80008290; // size:0x80 (timerintr, true)
__osInsertTimer = 0x80008310; // size:0x108 (timerintr, true)
__osProbeTLB = 0x80008420; // (virtualtophysical, false)
// alSynFreeFX = 0x800084D0; // size:0x8 (synfreefx, true)
osViGetCurrentFramebuffer = 0x800084E0; // (sched, false)
osViGetNextFramebuffer = 0x80008520; // (sched, false)
osCreateViManager = 0x80008560; // size:0x1A0 (vimgr, true)
viMgrMain = 0x80008700; // size:0x198 (vimgr, true)
osViSetEvent = 0x800088A0; // size:0x58 (visetevent, true)
osViSetMode = 0x80008900; // size:0x4C (visetmode, true)
osViSetSpecialFeatures = 0x80008950; // size:0x164 (visetspecial, true)
osViSetYScale = 0x80008AC0; // size:0x44 (visetyscale, true)
osViSwapBuffer = 0x80008B10; // size:0x44 (viswapbuf, true)
__osViSwapContext = 0x80008B60; // size:0x308 (viswapcontext, true)
osViBlack = 0x80008E70; // size:0x5C (viblack, true)
guMtxIdentF = 0x80008F40; // (ortho, false)
guMtxF2L = 0x80008FA0; // (ortho, false)
// alSynFreeFX = 0x80008FFC; // size:0x8 (synfreefx, true)
// alSynFreeFX = 0x80009084; // size:0x8 (synfreefx, true)
__createSpeedParam = 0x80009400; // size:0xB8 (initialize, true)
__osInitialize_common = 0x800094B8; // size:0x2D8 (initialize, true)
__osInitialize_autodetect = 0x80009790; // size:0x8 (initialize, true)
// alSynFreeFX = 0x80009790; // size:0x8 (synfreefx, true)
osEepromRead = 0x800097A0; // size:0x198 (conteepread, true)
// = 0x800098D2; // (conteepread, false)
__osPackEepReadData = 0x80009938; // size:0x88 (conteepread, true)
osEepromWrite = 0x800099C0; // size:0x168 (conteepwrite, true)
// = 0x80009ACE; // (conteepwrite, false)
__osPackEepWriteData = 0x80009B28; // size:0xA8 (conteepwrite, true)
// = 0x80009B4C; // (conteepwrite, false)
__osEepStatus = 0x80009BD0; // size:0x19C (conteepwrite, true)
// = 0x80009D70; // (exceptasm, false)
__osExceptionPreamble = 0x80009D70; // (initialize, false)
// = 0x8000A199; // (exceptasm, false)
// = 0x8000A313; // (exceptasm, false)
// = 0x8000A349; // (exceptasm, false)
__osEnqueueAndYield = 0x8000A3EC; // (jammesg, false)
__osEnqueueThread = 0x8000A4F4; // (setthreadpri, false)
__osPopThread = 0x8000A53C; // (jammesg, false)
__osDispatchThread = 0x8000A554; // (destroythread, false)
__osCleanupThread = 0x8000A6D0; // (createthread, false)
__osDisableInt = 0x8000A6E0; // (cartrominit, false)
__osRestoreInt = 0x8000A750; // (cartrominit, false)
osSetIntMask = 0x8000A770; // (sched, false)
__osSetGlobalIntMask = 0x8000A810; // size:0x40 (setglobalintmask, true)
__osResetGlobalIntMask = 0x8000A850; // size:0x48 (resetglobalintmask, true)
__osPiRawStartDma = 0x8000A8A0; // size:0xD0 (pirawdma, true)
osPiGetCmdQueue = 0x8000A970; // size:0x20 (pigetcmdq, true)
__osEPiRawReadIo = 0x8000A990; // size:0x168 (epirawread, true)
// alHeapCheck = 0x8000AAF0; // size:0x8 (heapcheck, true)
__osEPiRawWriteIo = 0x8000AB00; // size:0x164 (epirawwrite, true)
// alHeapCheck = 0x8000AC5C; // size:0x8 (heapcheck, true)
__osAiDeviceBusy = 0x8000AC70; // size:0x14 (ai, true)
_init_lpfilter = 0x8000AC90; // size:0xA4 (drvrnew, true)
alFxNew = 0x8000AD34; // size:0x498 (drvrnew, true)
alEnvmixerNew = 0x8000B1CC; // size:0xB8 (drvrnew, true)
alLoadNew = 0x8000B284; // size:0xB0 (drvrnew, true)
alResampleNew = 0x8000B334; // size:0x8C (drvrnew, true)
alAuxBusNew = 0x8000B3C0; // size:0x5C (drvrnew, true)
alMainBusNew = 0x8000B41C; // size:0x5C (drvrnew, true)
alSaveNew = 0x8000B478; // size:0x44 (drvrnew, true)
alAdpcmPull = 0x8000B4C0; // size:0x444 (load, true)
alRaw16Pull = 0x8000B904; // size:0x39C (load, true)
// = 0x8000BBE9; // (load, false)
alLoadParam = 0x8000BCA0; // size:0x1AC (load, true)
_decodeChunk = 0x8000BE4C; // size:0x178 (load, true)
alAuxBusPull = 0x8000BFD0; // size:0xDC (auxbus, true)
alAuxBusParam = 0x8000C0AC; // size:0x30 (auxbus, true)
alFilterNew = 0x8000C0E0; // size:0x1C (filter, true)
alMainBusPull = 0x8000C100; // size:0x140 (mainbus, true)
alMainBusParam = 0x8000C240; // size:0x30 (mainbus, true)
alResamplePull = 0x8000C270; // size:0x1EC (resample, true)
alResampleParam = 0x8000C45C; // size:0xC0 (resample, true)
alFxPull = 0x8000C520; // size:0x374 (reverb, true)
alFxParam = 0x8000C894; // size:0x14 (reverb, true)
alFxParamHdl = 0x8000C8A8; // size:0x1F0 (reverb, true)
// = 0x8000C93A; // (reverb, false)
_loadOutputBuffer = 0x8000CA98; // size:0x218 (reverb, true)
// = 0x8000CACC; // (reverb, false)
// = 0x8000CBE0; // (reverb, false)
_loadBuffer = 0x8000CCB0; // size:0x170 (reverb, true)
// = 0x8000CCF4; // (reverb, false)
// = 0x8000CD69; // (reverb, false)
_saveBuffer = 0x8000CE20; // size:0x170 (reverb, true)
_filterBuffer = 0x8000CF90; // size:0x9C (reverb, true)
_doModFunc = 0x8000D02C; // size:0x8C (reverb, true)
alSavePull = 0x8000D0C0; // size:0xA8 (save, true)
alSaveParam = 0x8000D168; // size:0x28 (save, true)
alHeapDBAlloc = 0x8000D190; // size:0x48 (heapalloc, true)
alCopy = 0x8000D1E0; // size:0x34 (copy, true)
// alSynFreeFX = 0x8000D20C; // size:0x8 (synfreefx, true)
osInvalICache = 0x8000D220; // (initialize, false)
// alSynFreeFX = 0x8000D28C; // size:0x8 (synfreefx, true)
osWritebackDCache = 0x8000D2A0; // (initialize, false)
// alSynFreeFX = 0x8000D30C; // size:0x8 (synfreefx, true)
osDpSetNextBuffer = 0x8000D320; // size:0x98 (dpsetnextbuf, true)
__osGetCause = 0x8000D3C0; // (initialize, false)
osGetCount = 0x8000D3D0; // (gettime, false)
__osGetSR = 0x8000D3E0; // (initialize, false)
__osSetCompare = 0x8000D3F0; // (timerintr, false)
__osSetFpcCsr = 0x8000D400; // (initialize, false)
__osSetSR = 0x8000D410; // (initialize, false)
__osSetWatchLo = 0x8000D420; // (initialize, false)
__osSpDeviceBusy = 0x8000D430; // size:0x18 (sp, true)
__osSpGetStatus = 0x8000D450; // size:0x10 (spgetstat, true)
__osSpSetStatus = 0x8000D460; // size:0x10 (spsetstat, true)
__osSpSetPc = 0x8000D470; // size:0x30 (spsetpc, true)
__osSpRawStartDma = 0x8000D4A0; // size:0x8C (sprawdma, true)
__osSiRawReadIo = 0x8000D530; // (initialize, false)
__osSiRawWriteIo = 0x8000D580; // (initialize, false)
osDestroyThread = 0x8000D5D0; // size:0xD8 (destroythread, true)
osMapTLBRdb = 0x8000D6B0; // (initialize, false)
// alSynFreeFX = 0x8000D700; // size:0x8 (synfreefx, true)
osUnmapTLBAll = 0x8000D710; // (initialize, false)
// alSynFreeFX = 0x8000D74C; // size:0x8 (synfreefx, true)
__osViInit = 0x8000D760; // size:0x104 (vi, true)
__osViGetCurrentContext = 0x8000D870; // (vimgr, false)
__osDpDeviceBusy = 0x8000D8E0; // size:0x18 (dp, true)
__osSiDeviceBusy = 0x8000D900; // size:0x18 (si, true)
// alSynFreeFX = 0x8000DDDC; // size:0x8 (synfreefx, true)
__udivdi3 = 0x8000E270; // (initialize, false)
__osPiDevMgr = 0x8000EBA0; // (epidma, false)
// = 0x8000EBA0; // (pimgr, false)
__osPiTable = 0x8000EBBC; // (cartrominit, false)
__osCurrentHandle = 0x8000EBC0; // (epirawdma, false)
// = 0x8000EBD0; // (cartrominit, false)
__osPiAccessQueueEnabled = 0x8000EBE0; // (pimgr, false)
// = 0x8000EBF0; // (aisetnextbuf, false)
// = 0x8000EC00; // (env, false)
// alGlobals = 0x8000ED00; // (env, false)
// = 0x8000ED00; // (sl, false)
// alGlobals = 0x8000ED00; // (synthesizer, false)
// = 0x8000ED10; // (controller, false)
// = 0x8000ED20; // (rotaterpy, false)
// = 0x8000ED30; // (sins, false)
// = 0x8000F530; // (seteventmesg, false)
// = 0x8000F540; // (sched, false)
__osThreadTail = 0x8000F560; // (createmesgqueue, false)
__osRunQueue = 0x8000F568; // (exceptasm, false)
__osActiveQueue = 0x8000F56C; // (createthread, false)
__osRunningThread = 0x8000F570; // (destroythread, false)
__osFaultedThread = 0x8000F574; // (exceptasm, false)
__osTimerList = 0x8000F580; // (settimer, false)
// = 0x8000F580; // (timerintr, false)
// = 0x8000F590; // (vimgr, false)
__additional_scanline = 0x8000F5AC; // (viswapcontext, false)
osViModeTable = 0x8000F5B0; // (sched, false)
// = 0x80010730; // (initialize, false)
osViClock = 0x80010738; // (aisetfreq, false)
__osShutdown = 0x8001073C; // (exceptasm, false)
__OSGlobalIntMask = 0x80010740; // (exceptasm, false)
// = 0x80010750; // (exceptasm, false)
// = 0x80010780; // (drvrnew, false)
// = 0x80010930; // (vi, false)
__osViCurr = 0x80010990; // (viswapcontext, false)
__osViNext = 0x80010994; // (viblack, false)
osViModeNtscLan1 = 0x800109A0; // (vi, false)
osViModePalLan1 = 0x800109F0; // (vi, false)
osViModeMpalLan1 = 0x80010A40; // (vi, false)
// = 0x80010B90; // (devmgr, false)
// = 0x80010BB0; // (aisetfreq, false)
// = 0x80010BC0; // (env, false)
// = 0x80010CB0; // (synthesizer, false)
// = 0x80010CD0; // (cosf, false)
// = 0x80010D30; // (perspective, false)
// = 0x80010D70; // (sinf, false)
// = 0x80010DD0; // (sched, false)
// = 0x80010DF0; // (viswapcontext, false)
// = 0x80010E00; // (exceptasm, false)
__osRcpImTable = 0x80010E50; // (exceptasm, false)
// = 0x80010E50; // (setintmask, false)
// = 0x80010ED0; // (drvrnew, false)
// = 0x80010F10; // (resample, false)
// = 0x80010F40; // (reverb, false)
__libm_qnan_f = 0x80010F90; // (cosf, false)
// = 0x800193B0; // (pimgr, false)
// = 0x8001A590; // (sptask, false)
// = 0x8001A5E0; // (vimgr, false)
__osBaseCounter = 0x8001D814; // size:0x4 (timerintr, true)
__osThreadSave = 0x8001D818; // (exceptasm, false)
__osContPifRam = 0x8001D9D0; // size:0x40 (controller, true)
__Dom2SpeedParam = 0x8001DA10; // (initialize, false)
__osViIntrCount = 0x8001FB58; // size:0x4 (timerintr, true)
__osMaxControllers = 0x8001FB64; // size:0x1 (controller, true)
__osCurrentTime = 0x8001FB70; // size:0x8 (timerintr, true)
__CartRomHandle = 0x8001FB80; // size:0x74 (cartrominit, true)
__osEepPifRam = 0x8001FC00; // size:0x40 (conteepread, true)
__osPiAccessQueue = 0x8001FC40; // (pimgr, false)
__Dom1SpeedParam = 0x8001FC58; // (initialize, false)
__osContLastCmd = 0x8001FCD4; // size:0x1 (controller, true)
__osEepromTimerMsg = 0x8001FCD8; // size:0x4 (controller, true)
__osTimerCounter = 0x8001FD00; // size:0x4 (timerintr, true)
__osEepromTimer = 0x80021D10; // (conteeplongwrite, false)
__osEventStateTab = 0x80021D30; // size:0x78 (seteventmesg, true)
__osFinalrom = 0x80021DA8; // size:0x4 (initialize, true)
__osEepromTimerQ = 0x80029DB8; // size:0x18 (controller, true)
// alSynFreeFX = 0x80044CA0; // size:0x8 (synfreefx, true)
// alSynFreeFX = 0x80067810; // size:0x8 (synfreefx, true)
// alSynFreeFX = 0x8006C610; // size:0x8 (synfreefx, true)

