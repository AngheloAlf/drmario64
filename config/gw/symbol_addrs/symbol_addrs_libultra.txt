// .text

osEepromProbe = 0x800025E0; // type:func size:0x74
osEepromLongWrite = 0x80002660; // type:func size:0xE4
osEepromLongRead = 0x80002750; // type:func size:0x70
osCreatePiManager = 0x800027C0; // type:func size:0x190
__osEPiRawStartDma = 0x80002950; // type:func size:0x1EC
osEPiWriteIo = 0x80002B40; // type:func
osEPiStartDma = 0x80002BA0; // type:func size:0x94
osEPiLinkHandle = 0x80002C40; // type:func size:0x44
osCartRomInit = 0x80002C90; // type:func size:0x178
__osDevMgrMain = 0x80002E10; // type:func size:0x3B8
__osPiCreateAccessQueue = 0x800031D0; // type:func (pimgr, false)
__osPiGetAccess = 0x80003224; // type:func (cartrominit, false)
__osPiRelAccess = 0x80003290; // type:func (cartrominit, false)
osAiGetLength = 0x800032C0; // type:func size:0x10
osAiGetStatus = 0x800032D0; // type:func size:0x10
osAiSetFrequency = 0x800032E0; // type:func size:0x118
// alSynFreeFX = 0x800033F0; // type:func size:0x8
osAiSetNextBuffer = 0x80003400; // type:func size:0x94
alEnvmixerPull = 0x800034A0; // type:func size:0x500
alEnvmixerParam = 0x800039A0; // type:func size:0xD4
_pullSubFrame = 0x80003A74; // type:func size:0x2D4
_frexpf = 0x80003D48; // type:func size:0xE0
_ldexpf = 0x80003E28; // type:func size:0x24
_getRate = 0x80003E4C; // type:func size:0x280
_getVol = 0x800040CC; // type:func size:0x84
alInit = 0x80004150; // type:func size:0x2C
alClose = 0x8000417C; // type:func size:0x30
alLink = 0x800041AC; // type:func size:0x20
alUnlink = 0x800041CC; // type:func size:0x30
alHeapInit = 0x80004200; // type:func size:0x34
alSynNew = 0x80004240; // type:func size:0x2CC
alAudioFrame = 0x8000450C; // type:func size:0x1B0
// = 0x800045D0; // type:func (synthesizer, false)
// = 0x8000463F; // type:func (synthesizer, false)
// = 0x800046AE; // type:func (synthesizer, false)
__allocParam = 0x800046BC; // type:func size:0x2C
__freeParam = 0x800046E8; // type:func size:0x18
_collectPVoices = 0x80004700; // type:func size:0x54
_freePVoice = 0x80004754; // type:func size:0x40
_timeToSamplesNoRound = 0x80004794; // type:func size:0x48
_timeToSamples = 0x800047DC; // type:func size:0x4C
__nextSampleTime = 0x80004828; // type:func size:0x54
alSynDelete = 0x80004880; // type:func size:0x8
alSynAddPlayer = 0x80004890; // type:func size:0x50
alSynAllocVoice = 0x800048E0; // type:func size:0x128
// = 0x800049BE; // type:func (synallocvoice, false)
_allocatePVoice = 0x80004A08; // type:func size:0xB8
alSynStopVoice = 0x80004AC0; // type:func size:0x7C
alSynStartVoice = 0x80004B40; // type:func size:0x94
alSynSetPitch = 0x80004BE0; // type:func size:0x90
alSynSetVol = 0x80004C70; // type:func size:0xB8
alSynSetFXMix = 0x80004D30; // type:func size:0xA0
alSynSetPan = 0x80004DD0; // type:func size:0x90
alSynAllocFX = 0x80004E60; // type:func size:0x94
osInvalDCache = 0x80004F00; // type:func (sirawdma, false)
osWritebackDCacheAll = 0x80004FB0; // type:func (sched, false)
// alSynFreeFX = 0x80004FD0; // type:func size:0x8
osContStartQuery = 0x80004FE0; // type:func size:0x80
osContGetQuery = 0x80005060; // type:func size:0x20
osContStartReadData = 0x80005080; // type:func size:0x88
osContGetReadData = 0x80005108; // type:func size:0x9C
// = 0x8000515B; // type:func (contreaddata, false)
__osPackReadData = 0x800051A4; // type:func size:0xB8
osContInit = 0x80005260; // type:func size:0x19C
// = 0x80005395; // type:func (controller, false)
__osContGetInitData = 0x800053FC; // type:func size:0xB4
// = 0x8000541C; // type:func (controller, false)
__osPackRequestData = 0x800054B0; // type:func size:0xBC
osContSetCh = 0x80005570; // type:func size:0x60
osVirtualToPhysical = 0x800055D0; // type:func size:0x54
sqrtf = 0x80005630; // type:func
cosf = 0x80005640; // type:func size:0x150
guOrthoF = 0x80005790; // type:func size:0x130
guOrtho = 0x800058C0; // type:func size:0x14C
guPerspectiveF = 0x80005A10; // type:func size:0x1B0
guPerspective = 0x80005BC0; // type:func size:0x1C8
guRotateRPYF = 0x80005D90; // type:func size:0x188
guRotateRPY = 0x80005F18; // type:func size:0x18C
sinf = 0x800060B0; // type:func size:0x1A0
sins = 0x80006250; // type:func size:0x54
bcmp = 0x800062B0; // type:func
bcopy = 0x800063C0; // type:func (sptask, false)
bzero = 0x800066E0; // type:func (cartrominit, false)
strchr = 0x80006780; // type:func size:0x40
strlen = 0x800067C0; // type:func size:0x24
memcpy = 0x800067E4; // type:func size:0x28
osCreateMesgQueue = 0x80006810; // type:func size:0x24
osJamMesg = 0x80006840; // type:func size:0x134
osRecvMesg = 0x80006980; // type:func size:0x124
osSendMesg = 0x80006AB0; // type:func size:0x130
osSetEventMesg = 0x80006BE0; // type:func size:0xAC
osSpTaskLoad = 0x80006C90; // type:func size:0x20C
osSpTaskStartGo = 0x80006E9C; // type:func size:0x2C
osSpTaskYield = 0x80006ED0; // type:func size:0x1C
osSpTaskYielded = 0x80006EF0; // type:func size:0x4C
osCreateScheduler = 0x80006F40; // type:func size:0x148
osScAddClient = 0x80007088; // type:func size:0x58
osScRemoveClient = 0x800070E0; // type:func size:0x90
osScGetCmdQ = 0x80007170; // type:func size:0x8
__scMain = 0x80007178; // type:func size:0x104
// = 0x800071AD; // type:func (sched, false)
// = 0x8000726D; // type:func (sched, false)
__scHandleRetrace = 0x8000727C; // type:func size:0x100
// = 0x80007321; // type:func (sched, false)
__scHandleRSP = 0x8000737C; // type:func size:0xF0
// = 0x800073CC; // type:func (sched, false)
// = 0x80007435; // type:func (sched, false)
__scHandleRDP = 0x8000746C; // type:func size:0x90
// = 0x80007477; // type:func (sched, false)
__scTaskReady = 0x800074FC; // type:func size:0x54
// = 0x80007513; // type:func (sched, false)
// = 0x8000753D; // type:func (sched, false)
__scTaskComplete = 0x80007550; // type:func size:0x8C
__scAppendList = 0x800075DC; // type:func size:0x58
__scExec = 0x80007634; // type:func size:0xD0
__scYield = 0x80007704; // type:func size:0x38
__scSchedule = 0x8000773C; // type:func size:0x214
__osSiRawStartDma = 0x80007950; // type:func size:0xA4
__osSiCreateAccessQueue = 0x80007A00; // type:func (controller, false)
__osSiGetAccess = 0x80007A54; // type:func (conteepprobe, false)
__osSiRelAccess = 0x80007AC0; // type:func (conteepprobe, false)
osCreateThread = 0x80007AF0; // type:func size:0xD0
osGetThreadPri = 0x80007BC0; // type:func size:0x18
osSetThreadPri = 0x80007BE0; // type:func size:0xC8
osStartThread = 0x80007CB0; // type:func size:0x118
osStopThread = 0x80007DD0; // type:func size:0xB4
__osDequeueThread = 0x80007E90; // type:func size:0x34
// alSynFreeFX = 0x80007EBC; // type:func size:0x8
osYieldThread = 0x80007ED0; // type:func size:0x48
osGetTime = 0x80007F20; // type:func size:0x84
osSetTime = 0x80007FB0; // type:func size:0x14
osSetTimer = 0x80007FD0; // type:func size:0x12C
__osTimerServicesInit = 0x80008100; // type:func size:0x54
__osTimerInterrupt = 0x80008154; // type:func size:0x13C
// = 0x8000822C; // type:func (timerintr, false)
// = 0x8000828C; // type:func (timerintr, false)
__osSetTimerIntr = 0x80008290; // type:func size:0x80
__osInsertTimer = 0x80008310; // type:func size:0x108
__osProbeTLB = 0x80008420; // type:func (virtualtophysical, false)
// alSynFreeFX = 0x800084D0; // type:func size:0x8
osViGetCurrentFramebuffer = 0x800084E0; // type:func (sched, false)
osViGetNextFramebuffer = 0x80008520; // type:func (sched, false)
osCreateViManager = 0x80008560; // type:func size:0x1A0
viMgrMain = 0x80008700; // type:func size:0x198
osViSetEvent = 0x800088A0; // type:func size:0x58
osViSetMode = 0x80008900; // type:func size:0x4C
osViSetSpecialFeatures = 0x80008950; // type:func size:0x164
osViSetYScale = 0x80008AC0; // type:func size:0x44
osViSwapBuffer = 0x80008B10; // type:func size:0x44
__osViSwapContext = 0x80008B60; // type:func size:0x308
osViBlack = 0x80008E70; // type:func size:0x5C
func_80008ED0_gw = 0x80008ED0; // type:func
guMtxIdent = 0x80008EE0; // type:func
guMtxIdentF = 0x80008F40; // type:func (ortho, false)
guMtxF2L = 0x80008FA0; // type:func (ortho, false)
guMtxL2F = 0x80009020; // type:func
guMtxCatF = 0x800090A0; // type:func
guScale = 0x800091A0; // type:func
guScaleF = 0x80009260; // type:func
guTranslate = 0x800092C0; // type:func
guTranslateF = 0x800093A0; // type:func
// alSynFreeFX = 0x80008FFC; // type:func size:0x8
// alSynFreeFX = 0x80009084; // type:func size:0x8
__createSpeedParam = 0x80009400; // type:func size:0xB8
__osInitialize_common = 0x800094B8; // type:func size:0x2D8
__osInitialize_autodetect = 0x80009790; // type:func size:0x8
// alSynFreeFX = 0x80009790; // type:func size:0x8
osEepromRead = 0x800097A0; // type:func size:0x198
// = 0x800098D2; // type:func (conteepread, false)
__osPackEepReadData = 0x80009938; // type:func size:0x88
osEepromWrite = 0x800099C0; // type:func size:0x168
// = 0x80009ACE; // type:func (conteepwrite, false)
__osPackEepWriteData = 0x80009B28; // type:func size:0xA8
// = 0x80009B4C; // type:func (conteepwrite, false)
__osEepStatus = 0x80009BD0; // type:func size:0x19C
// = 0x80009D70; // type:func (exceptasm, false)
__osExceptionPreamble = 0x80009D70; // type:func (initialize, false)
func_80009D80_gw = 0x80009D80; //
func_8000A2FC_gw = 0x8000A2FC; // type:func
__osEnqueueAndYield = 0x8000A3EC; // type:func (jammesg, false)
__osEnqueueThread = 0x8000A4F4; // type:func (setthreadpri, false)
__osPopThread = 0x8000A53C; // type:func (jammesg, false)
__osDispatchThread = 0x8000A554; // type:func (destroythread, false)
__osCleanupThread = 0x8000A6D0; // type:func (createthread, false)
__osDisableInt = 0x8000A6E0; // type:func (cartrominit, false)
__osRestoreInt = 0x8000A750; // type:func (cartrominit, false)
osSetIntMask = 0x8000A770; // type:func (sched, false)
__osSetGlobalIntMask = 0x8000A810; // type:func size:0x40
__osResetGlobalIntMask = 0x8000A850; // type:func size:0x48
__osPiRawStartDma = 0x8000A8A0; // type:func size:0xD0
osPiGetCmdQueue = 0x8000A970; // type:func size:0x20
__osEPiRawReadIo = 0x8000A990; // type:func size:0x168
// alHeapCheck = 0x8000AAF0; // type:func size:0x8
__osEPiRawWriteIo = 0x8000AB00; // type:func size:0x164
// alHeapCheck = 0x8000AC5C; // type:func size:0x8
__osAiDeviceBusy = 0x8000AC70; // type:func size:0x14
_init_lpfilter = 0x8000AC90; // type:func size:0xA4
alFxNew = 0x8000AD34; // type:func size:0x498
alEnvmixerNew = 0x8000B1CC; // type:func size:0xB8
alLoadNew = 0x8000B284; // type:func size:0xB0
alResampleNew = 0x8000B334; // type:func size:0x8C
alAuxBusNew = 0x8000B3C0; // type:func size:0x5C
alMainBusNew = 0x8000B41C; // type:func size:0x5C
alSaveNew = 0x8000B478; // type:func size:0x44
alAdpcmPull = 0x8000B4C0; // type:func size:0x444
alRaw16Pull = 0x8000B904; // type:func size:0x39C
// = 0x8000BBE9; // type:func (load, false)
alLoadParam = 0x8000BCA0; // type:func size:0x1AC
_decodeChunk = 0x8000BE4C; // type:func size:0x178
alAuxBusPull = 0x8000BFD0; // type:func size:0xDC
alAuxBusParam = 0x8000C0AC; // type:func size:0x30
alFilterNew = 0x8000C0E0; // type:func size:0x1C
alMainBusPull = 0x8000C100; // type:func size:0x140
alMainBusParam = 0x8000C240; // type:func size:0x30
alResamplePull = 0x8000C270; // type:func size:0x1EC
alResampleParam = 0x8000C45C; // type:func size:0xC0
alFxPull = 0x8000C520; // type:func size:0x374
alFxParam = 0x8000C894; // type:func size:0x14
alFxParamHdl = 0x8000C8A8; // type:func size:0x1F0
// = 0x8000C93A; // type:func (reverb, false)
_loadOutputBuffer = 0x8000CA98; // type:func size:0x218
// = 0x8000CACC; // type:func (reverb, false)
// = 0x8000CBE0; // type:func (reverb, false)
_loadBuffer = 0x8000CCB0; // type:func size:0x170
// = 0x8000CCF4; // type:func (reverb, false)
// = 0x8000CD69; // type:func (reverb, false)
_saveBuffer = 0x8000CE20; // type:func size:0x170
_filterBuffer = 0x8000CF90; // type:func size:0x9C
_doModFunc = 0x8000D02C; // type:func size:0x8C
alSavePull = 0x8000D0C0; // type:func size:0xA8
alSaveParam = 0x8000D168; // type:func size:0x28
alHeapDBAlloc = 0x8000D190; // type:func size:0x48
alCopy = 0x8000D1E0; // type:func size:0x34
// alSynFreeFX = 0x8000D20C; // type:func size:0x8
osInvalICache = 0x8000D220; // type:func (initialize, false)
// alSynFreeFX = 0x8000D28C; // type:func size:0x8
osWritebackDCache = 0x8000D2A0; // type:func (initialize, false)
// alSynFreeFX = 0x8000D30C; // type:func size:0x8
osDpSetNextBuffer = 0x8000D320; // type:func size:0x98
__osGetCause = 0x8000D3C0; // type:func (initialize, false)
osGetCount = 0x8000D3D0; // type:func (gettime, false)
__osGetSR = 0x8000D3E0; // type:func (initialize, false)
__osSetCompare = 0x8000D3F0; // type:func (timerintr, false)
__osSetFpcCsr = 0x8000D400; // type:func (initialize, false)
__osSetSR = 0x8000D410; // type:func (initialize, false)
__osSetWatchLo = 0x8000D420; // type:func (initialize, false)
__osSpDeviceBusy = 0x8000D430; // type:func size:0x18
__osSpGetStatus = 0x8000D450; // type:func size:0x10
__osSpSetStatus = 0x8000D460; // type:func size:0x10
__osSpSetPc = 0x8000D470; // type:func size:0x30
__osSpRawStartDma = 0x8000D4A0; // type:func size:0x8C
__osSiRawReadIo = 0x8000D530; // type:func (initialize, false)
__osSiRawWriteIo = 0x8000D580; // type:func (initialize, false)
osDestroyThread = 0x8000D5D0; // type:func size:0xD8
osMapTLBRdb = 0x8000D6B0; // type:func (initialize, false)
// alSynFreeFX = 0x8000D700; // type:func size:0x8
osUnmapTLBAll = 0x8000D710; // type:func (initialize, false)
// alSynFreeFX = 0x8000D74C; // type:func size:0x8
__osViInit = 0x8000D760; // type:func size:0x104
__osViGetCurrentContext = 0x8000D870; // type:func (vimgr, false)
func_8000D880_gw = 0x8000D880; // type:func
__osDpDeviceBusy = 0x8000D8E0; // type:func size:0x18
__osSiDeviceBusy = 0x8000D900; // type:func size:0x18
// alSynFreeFX = 0x8000DDDC; // type:func size:0x8


// .data

__osPiDevMgr = 0x8000EBA0; // size:0x1C
__osPiTable = 0x8000EBBC; // (cartrominit, false)
__osCurrentHandle = 0x8000EBC0; // (epirawdma, false)
D_8000EBD0_gw = 0x8000EBD0; //
__osPiAccessQueueEnabled = 0x8000EBE0; // (pimgr, false)
D_8000EBF0_gw = 0x8000EBF0; // (aisetnextbuf, false)
eqpower = 0x8000EC00; // type:s16 (env, false)
alGlobals = 0x8000ED00; //
__osContinitialized = 0x8000ED10; // (controller, false)
D_FLT_8000ED20_gw = 0x8000ED20; // type:f32 (rotaterpy, false)
sintable = 0x8000ED30; // type:u16 (sins, false)
__osPreNMI = 0x8000F530; // (seteventmesg, false)
// = 0x8000F540; // (sched, false)
D_8000F540 = 0x8000F540; //
dp_busy = 0x8000F544; //
dpCount = 0x8000F548; //
D_8000F54C_gw = 0x8000F54C; //
__osSiAccessQueueEnabled = 0x8000F550; //
__osThreadTail = 0x8000F560; // (createmesgqueue, false)
__osRunQueue = 0x8000F568; // (exceptasm, false)
__osActiveQueue = 0x8000F56C; // (createthread, false)
__osRunningThread = 0x8000F570; // (destroythread, false)
__osFaultedThread = 0x8000F574; // (exceptasm, false)
__osTimerList = 0x8000F580; // (settimer, false)

__osViDevMgr = 0x8000F590; // size:0x1C
__additional_scanline = 0x8000F5AC; // (viswapcontext, false)

osViModeTable = 0x8000F5B0; // size:0x1180
osClockRate = 0x80010730; // size:0x8
osViClock = 0x80010738; // (aisetfreq, false)
__osShutdown = 0x8001073C; // (exceptasm, false)
__OSGlobalIntMask = 0x80010740; // (exceptasm, false)
__osHwIntTable = 0x80010750; // (exceptasm, false)
__osPiIntTable = 0x80010778; //
SMALLROOM_PARAMS = 0x80010780; // (drvrnew, false)
BIGROOM_PARAMS = 0x800107E8; //
ECHO_PARAMS = 0x80010870; //
CHORUS_PARAMS = 0x80010898; //
FLANGE_PARAMS = 0x800108C0; //
NULL_PARAMS = 0x800108E8; //

L_INC = 0x80010910; //
_loadOutputBuffer$in_function_static$val = 0x8001091C; //
_loadOutputBuffer$in_function_static$lastval = 0x80010920; //
_loadOutputBuffer$in_function_static$blob = 0x80010924; //

vi = 0x80010930; // size:0x60
__osViCurr = 0x80010990; // (viswapcontext, false)
__osViNext = 0x80010994; // (viblack, false)

osViModeNtscLan1 = 0x800109A0; // (vi, false)
osViModePalLan1 = 0x800109F0; // (vi, false)
osViModeMpalLan1 = 0x80010A40; // size:0x50


// .rodata

jtbl_80010B90_gw = 0x80010B90; // type:jtbl
RO_DBL_80010BB0_gw = 0x80010BB0; // type:f64
jtbl_80010BC0_gw = 0x80010BC0; // type:jtbl
RO_DBL_80010C08_gw = 0x80010C08; // type:f64
RO_DBL_80010C10_gw = 0x80010C10; // type:f64
RO_DBL_80010C18_gw = 0x80010C18; // type:f64
RO_80010C20_gw = 0x80010C20; //
RO_DBL_80010C60_gw = 0x80010C60; // type:f64
RO_DBL_80010C68_gw = 0x80010C68; // type:f64
RO_DBL_80010C70_gw = 0x80010C70; // type:f64
RO_DBL_80010C78_gw = 0x80010C78; // type:f64
RO_DBL_80010C80_gw = 0x80010C80; // type:f64
RO_DBL_80010C88_gw = 0x80010C88; // type:f64
RO_DBL_80010C90_gw = 0x80010C90; // type:f64
RO_DBL_80010C98_gw = 0x80010C98; // type:f64
RO_DBL_80010CA0_gw = 0x80010CA0; // type:f64
RO_DBL_80010CA8_gw = 0x80010CA8; // type:f64
RO_DBL_80010CB0_gw = 0x80010CB0; // type:f64
RO_DBL_80010CB8_gw = 0x80010CB8; // type:f64
RO_DBL_80010CC0_gw = 0x80010CC0; // type:f64
RO_DBL_80010CC8_gw = 0x80010CC8; // type:f64
RO_DBL_80010CD8_gw = 0x80010CD8; // type:f64
RO_DBL_80010CE0_gw = 0x80010CE0; // type:f64
RO_DBL_80010CE8_gw = 0x80010CE8; // type:f64
RO_DBL_80010CF0_gw = 0x80010CF0; // type:f64
RO_DBL_80010CF8_gw = 0x80010CF8; // type:f64
RO_DBL_80010D00_gw = 0x80010D00; // type:f64
RO_DBL_80010D08_gw = 0x80010D08; // type:f64
RO_FLT_80010D10_gw = 0x80010D10; // type:f32
RO_DBL_80010D18_gw = 0x80010D18; // type:f64
RO_DBL_80010D20_gw = 0x80010D20; // type:f64
RO_DBL_80010D30_gw = 0x80010D30; // type:f64
RO_DBL_80010D38_gw = 0x80010D38; // type:f64
RO_DBL_80010D40_gw = 0x80010D40; // type:f64
RO_DBL_80010D48_gw = 0x80010D48; // type:f64
RO_DBL_80010D50_gw = 0x80010D50; // type:f64
RO_DBL_80010D58_gw = 0x80010D58; // type:f64
RO_DBL_80010D60_gw = 0x80010D60; // type:f64
RO_DBL_80010D68_gw = 0x80010D68; // type:f64
RO_DBL_80010D78_gw = 0x80010D78; // type:f64
RO_DBL_80010D80_gw = 0x80010D80; // type:f64
RO_DBL_80010D88_gw = 0x80010D88; // type:f64
RO_DBL_80010D90_gw = 0x80010D90; // type:f64
RO_DBL_80010D98_gw = 0x80010D98; // type:f64
RO_DBL_80010DA0_gw = 0x80010DA0; // type:f64
RO_DBL_80010DA8_gw = 0x80010DA8; // type:f64
RO_FLT_80010DB0_gw = 0x80010DB0; // type:f32
RO_DBL_80010DB8_gw = 0x80010DB8; // type:f64
RO_DBL_80010DC0_gw = 0x80010DC0; // type:f64
jtbl_80010DD0_gw = 0x80010DD0; // type:jtbl
RO_DBL_80010DF0_gw = 0x80010DF0; // type:f64
RO_80010E00_gw = 0x80010E00; // type:u8
jtbl_80010E20_gw = 0x80010E20; // type:jtbl
__osRcpImTable = 0x80010E50; // type:u16 (exceptasm, false)
RO_DBL_80010ED0_gw = 0x80010ED0; // type:f64
jtbl_80010ED8_gw = 0x80010ED8; // type:jtbl
RO_DBL_80010EF0_gw = 0x80010EF0; // type:f64
RO_DBL_80010EF8_gw = 0x80010EF8; // type:f64
RO_DBL_80010F00_gw = 0x80010F00; // type:f64
RO_DBL_80010F10_gw = 0x80010F10; // type:f64
jtbl_80010F18_gw = 0x80010F18; // type:jtbl
jtbl_80010F40_gw = 0x80010F40; // type:jtbl
RO_DBL_80010F60_gw = 0x80010F60; // type:f64
RO_DBL_80010F68_gw = 0x80010F68; // type:f64
RO_DBL_80010F70_gw = 0x80010F70; // type:f64
RO_DBL_80010F78_gw = 0x80010F78; // type:f64
RO_DBL_80010F80_gw = 0x80010F80; // type:f64
RO_DBL_80010F88_gw = 0x80010F88; // type:f64
__libm_qnan_f = 0x80010F90; // type:f32 (cosf, false)


// .bss

// = 0x800193B0; // (pimgr, false)
// = 0x8001A590; // (sptask, false)
// = 0x8001A5E0; // (vimgr, false)
__osBaseCounter = 0x8001D814; // size:0x4
__osThreadSave = 0x8001D818; // (exceptasm, false)
__osContPifRam = 0x8001D9D0; // size:0x40
__Dom2SpeedParam = 0x8001DA10; // (initialize, false)
__osViIntrCount = 0x8001FB58; // size:0x4
__osMaxControllers = 0x8001FB64; // size:0x1
__osCurrentTime = 0x8001FB70; // size:0x8
__CartRomHandle = 0x8001FB80; // size:0x74
__osEepPifRam = 0x8001FC00; // size:0x40
__osPiAccessQueue = 0x8001FC40; // (pimgr, false)
__Dom1SpeedParam = 0x8001FC58; // (initialize, false)
__osContLastCmd = 0x8001FCD4; // size:0x1
__osEepromTimerMsg = 0x8001FCD8; // size:0x4
__osTimerCounter = 0x8001FD00; // size:0x4
__osEepromTimer = 0x80021D10; // (conteeplongwrite, false)
__osEventStateTab = 0x80021D30; // size:0x78
__osFinalrom = 0x80021DA8; // size:0x4
__osEepromTimerQ = 0x80029DB8; // size:0x18
// alSynFreeFX = 0x80044CA0; // size:0x8
// alSynFreeFX = 0x80067810; // size:0x8
// alSynFreeFX = 0x8006C610; // size:0x8

